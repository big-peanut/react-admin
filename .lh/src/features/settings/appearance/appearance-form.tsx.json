{
    "sourceFile": "src/features/settings/appearance/appearance-form.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1740976226323,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740976404094,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,11 +45,19 @@\n     resolver: zodResolver(appearanceFormSchema),\r\n     defaultValues,\r\n   })\r\n \r\n-  const onSubmit = () => {\r\n+  function onSubmit(data: AppearanceFormValues) {\r\n+    if (data.font != font) setFont(data.font)\r\n+    if (data.theme != theme) setTheme(data.theme)\r\n+\r\n     toast({\r\n-      title: 'Your Changes Have Been Saved',\r\n+      title: 'You submitted the following values:',\r\n+      description: (\r\n+        <pre className='mt-2 w-[340px] rounded-md bg-slate-950 p-4'>\r\n+          <code className='text-white'>{JSON.stringify(data, null, 2)}</code>\r\n+        </pre>\r\n+      ),\r\n     })\r\n   }\r\n \r\n   return (\r\n"
                }
            ],
            "date": 1740976226323,
            "name": "Commit-0",
            "content": "import { z } from 'zod'\r\nimport { useForm } from 'react-hook-form'\r\nimport { ChevronDownIcon } from '@radix-ui/react-icons'\r\nimport { zodResolver } from '@hookform/resolvers/zod'\r\nimport { fonts } from '@/config/fonts'\r\nimport { cn } from '@/lib/utils'\r\nimport { useFont } from '@/context/font-context'\r\nimport { useTheme } from '@/context/theme-context'\r\nimport { toast } from '@/hooks/use-toast'\r\nimport { Button, buttonVariants } from '@/components/ui/button'\r\nimport {\r\n  Form,\r\n  FormControl,\r\n  FormDescription,\r\n  FormField,\r\n  FormItem,\r\n  FormLabel,\r\n  FormMessage,\r\n} from '@/components/ui/form'\r\nimport { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n\r\nconst appearanceFormSchema = z.object({\r\n  theme: z.enum(['light', 'dark'], {\r\n    required_error: 'Please select a theme.',\r\n  }),\r\n  font: z.enum(fonts, {\r\n    invalid_type_error: 'Select a font',\r\n    required_error: 'Please select a font.',\r\n  }),\r\n})\r\n\r\ntype AppearanceFormValues = z.infer<typeof appearanceFormSchema>\r\n\r\nexport function AppearanceForm() {\r\n  const { font, setFont } = useFont()\r\n  const { theme, setTheme } = useTheme()\r\n\r\n  // This can come from your database or API.\r\n  const defaultValues: Partial<AppearanceFormValues> = {\r\n    theme: theme as 'light' | 'dark',\r\n    font,\r\n  }\r\n\r\n  const form = useForm<AppearanceFormValues>({\r\n    resolver: zodResolver(appearanceFormSchema),\r\n    defaultValues,\r\n  })\r\n\r\n  const onSubmit = () => {\r\n    toast({\r\n      title: 'Your Changes Have Been Saved',\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Form {...form}>\r\n      <form onSubmit={form.handleSubmit(onSubmit)} className='space-y-8'>\r\n        <FormField\r\n          control={form.control}\r\n          name='font'\r\n          render={({ field }) => (\r\n            <FormItem>\r\n              <FormLabel>Font</FormLabel>\r\n              <div className='relative w-max'>\r\n                <FormControl>\r\n                  <select\r\n                    className={cn(\r\n                      buttonVariants({ variant: 'outline' }),\r\n                      'w-[200px] appearance-none font-normal capitalize'\r\n                    )}\r\n                    {...field}\r\n                  >\r\n                    {fonts.map((font) => (\r\n                      <option key={font} value={font}>\r\n                        {font}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </FormControl>\r\n                <ChevronDownIcon className='absolute right-3 top-2.5 h-4 w-4 opacity-50' />\r\n              </div>\r\n              <FormDescription className='font-manrope'>\r\n                Set the font you want to use in the dashboard.\r\n              </FormDescription>\r\n              <FormMessage />\r\n            </FormItem>\r\n          )}\r\n        />\r\n        <FormField\r\n          control={form.control}\r\n          name='theme'\r\n          render={({ field }) => (\r\n            <FormItem className='space-y-1'>\r\n              <FormLabel>Theme</FormLabel>\r\n              <FormDescription>\r\n                Select the theme for the dashboard.\r\n              </FormDescription>\r\n              <FormMessage />\r\n              <RadioGroup\r\n                onValueChange={field.onChange}\r\n                defaultValue={field.value}\r\n                className='grid max-w-md grid-cols-2 gap-8 pt-2'\r\n              >\r\n                <FormItem>\r\n                  <FormLabel className='[&:has([data-state=checked])>div]:border-primary'>\r\n                    <FormControl>\r\n                      <RadioGroupItem value='light' className='sr-only' />\r\n                    </FormControl>\r\n                    <div className='items-center rounded-md border-2 border-muted p-1 hover:border-accent'>\r\n                      <div className='space-y-2 rounded-sm bg-[#ecedef] p-2'>\r\n                        <div className='space-y-2 rounded-md bg-white p-2 shadow-sm'>\r\n                          <div className='h-2 w-[80px] rounded-lg bg-[#ecedef]' />\r\n                          <div className='h-2 w-[100px] rounded-lg bg-[#ecedef]' />\r\n                        </div>\r\n                        <div className='flex items-center space-x-2 rounded-md bg-white p-2 shadow-sm'>\r\n                          <div className='h-4 w-4 rounded-full bg-[#ecedef]' />\r\n                          <div className='h-2 w-[100px] rounded-lg bg-[#ecedef]' />\r\n                        </div>\r\n                        <div className='flex items-center space-x-2 rounded-md bg-white p-2 shadow-sm'>\r\n                          <div className='h-4 w-4 rounded-full bg-[#ecedef]' />\r\n                          <div className='h-2 w-[100px] rounded-lg bg-[#ecedef]' />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <span className='block w-full p-2 text-center font-normal'>\r\n                      Light\r\n                    </span>\r\n                  </FormLabel>\r\n                </FormItem>\r\n                <FormItem>\r\n                  <FormLabel className='[&:has([data-state=checked])>div]:border-primary'>\r\n                    <FormControl>\r\n                      <RadioGroupItem value='dark' className='sr-only' />\r\n                    </FormControl>\r\n                    <div className='items-center rounded-md border-2 border-muted bg-popover p-1 hover:bg-accent hover:text-accent-foreground'>\r\n                      <div className='space-y-2 rounded-sm bg-slate-950 p-2'>\r\n                        <div className='space-y-2 rounded-md bg-slate-800 p-2 shadow-sm'>\r\n                          <div className='h-2 w-[80px] rounded-lg bg-slate-400' />\r\n                          <div className='h-2 w-[100px] rounded-lg bg-slate-400' />\r\n                        </div>\r\n                        <div className='flex items-center space-x-2 rounded-md bg-slate-800 p-2 shadow-sm'>\r\n                          <div className='h-4 w-4 rounded-full bg-slate-400' />\r\n                          <div className='h-2 w-[100px] rounded-lg bg-slate-400' />\r\n                        </div>\r\n                        <div className='flex items-center space-x-2 rounded-md bg-slate-800 p-2 shadow-sm'>\r\n                          <div className='h-4 w-4 rounded-full bg-slate-400' />\r\n                          <div className='h-2 w-[100px] rounded-lg bg-slate-400' />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <span className='block w-full p-2 text-center font-normal'>\r\n                      Dark\r\n                    </span>\r\n                  </FormLabel>\r\n                </FormItem>\r\n              </RadioGroup>\r\n            </FormItem>\r\n          )}\r\n        />\r\n\r\n        <Button type='submit'>Update preferences</Button>\r\n      </form>\r\n    </Form>\r\n  )\r\n}\r\n"
        }
    ]
}