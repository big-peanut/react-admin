{
    "sourceFile": "src/features/users/components/users-action-dialog.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1740972198656,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740976255656,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,19 +115,12 @@\n           isEdit,\r\n         },\r\n   })\r\n \r\n-  const onSubmit = (values: UserForm) => {\r\n-    form.reset()\r\n+  const onSubmit = () => {\r\n     toast({\r\n-      title: 'You submitted the following values:',\r\n-      description: (\r\n-        <pre className='mt-2 w-[340px] rounded-md bg-slate-950 p-4'>\r\n-          <code className='text-white'>{JSON.stringify(values, null, 2)}</code>\r\n-        </pre>\r\n-      ),\r\n+      title: 'Your Changes Have Been Saved',\r\n     })\r\n-    onOpenChange(false)\r\n   }\r\n \r\n   const isPasswordTouched = !!form.formState.dirtyFields.password\r\n \r\n"
                },
                {
                    "date": 1740976373882,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,8 +23,9 @@\n } from '@/components/ui/form'\r\n import { Input } from '@/components/ui/input'\r\n import { ScrollArea } from '@/components/ui/scroll-area'\r\n import { PasswordInput } from '@/components/password-input'\r\n+import { SelectDropdown } from '@/components/select-dropdown'\r\n import { User } from '../data/schema'\r\n \r\n const formSchema = z\r\n   .object({\r\n@@ -115,12 +116,19 @@\n           isEdit,\r\n         },\r\n   })\r\n \r\n-  const onSubmit = () => {\r\n+  const onSubmit = (values: UserForm) => {\r\n+    form.reset()\r\n     toast({\r\n-      title: 'Your Changes Have Been Saved',\r\n+      title: 'You submitted the following values:',\r\n+      description: (\r\n+        <pre className='mt-2 w-[340px] rounded-md bg-slate-950 p-4'>\r\n+          <code className='text-white'>{JSON.stringify(values, null, 2)}</code>\r\n+        </pre>\r\n+      ),\r\n     })\r\n+    onOpenChange(false)\r\n   }\r\n \r\n   const isPasswordTouched = !!form.formState.dirtyFields.password\r\n \r\n@@ -243,10 +251,30 @@\n                     <FormMessage className='col-span-4 col-start-3' />\r\n                   </FormItem>\r\n                 )}\r\n               />\r\n+   \r\n               <FormField\r\n                 control={form.control}\r\n+                name='password'\r\n+                render={({ field }) => (\r\n+                  <FormItem className='grid grid-cols-6 items-center gap-x-4 gap-y-1 space-y-0'>\r\n+                    <FormLabel className='col-span-2 text-right'>\r\n+                      Password\r\n+                    </FormLabel>\r\n+                    <FormControl>\r\n+                      <PasswordInput\r\n+                        placeholder='e.g., S3cur3P@ssw0rd'\r\n+                        className='col-span-4'\r\n+                        {...field}\r\n+                      />\r\n+                    </FormControl>\r\n+                    <FormMessage className='col-span-4 col-start-3' />\r\n+                  </FormItem>\r\n+                )}\r\n+              />\r\n+              <FormField\r\n+                control={form.control}\r\n                 name='confirmPassword'\r\n                 render={({ field }) => (\r\n                   <FormItem className='grid grid-cols-6 items-center gap-x-4 gap-y-1 space-y-0'>\r\n                     <FormLabel className='col-span-2 text-right'>\r\n"
                },
                {
                    "date": 1740976379698,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,8 @@\n } from '@/components/ui/form'\r\n import { Input } from '@/components/ui/input'\r\n import { ScrollArea } from '@/components/ui/scroll-area'\r\n import { PasswordInput } from '@/components/password-input'\r\n-import { SelectDropdown } from '@/components/select-dropdown'\r\n import { User } from '../data/schema'\r\n \r\n const formSchema = z\r\n   .object({\r\n"
                }
            ],
            "date": 1740972198656,
            "name": "Commit-0",
            "content": "'use client'\r\n\r\nimport { z } from 'zod'\r\nimport { useForm } from 'react-hook-form'\r\nimport { zodResolver } from '@hookform/resolvers/zod'\r\nimport { toast } from '@/hooks/use-toast'\r\nimport { Button } from '@/components/ui/button'\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogDescription,\r\n  DialogFooter,\r\n  DialogHeader,\r\n  DialogTitle,\r\n} from '@/components/ui/dialog'\r\nimport {\r\n  Form,\r\n  FormControl,\r\n  FormField,\r\n  FormItem,\r\n  FormLabel,\r\n  FormMessage,\r\n} from '@/components/ui/form'\r\nimport { Input } from '@/components/ui/input'\r\nimport { ScrollArea } from '@/components/ui/scroll-area'\r\nimport { PasswordInput } from '@/components/password-input'\r\nimport { User } from '../data/schema'\r\n\r\nconst formSchema = z\r\n  .object({\r\n    firstName: z.string().min(1, { message: 'First Name is required.' }),\r\n    lastName: z.string().min(1, { message: 'Last Name is required.' }),\r\n    username: z.string().min(1, { message: 'Username is required.' }),\r\n    phoneNumber: z.string().min(1, { message: 'Phone number is required.' }),\r\n    email: z\r\n      .string()\r\n      .min(1, { message: 'Email is required.' })\r\n      .email({ message: 'Email is invalid.' }),\r\n    password: z.string().transform((pwd) => pwd.trim()),\r\n    role: z.string().min(1, { message: 'Role is required.' }),\r\n    confirmPassword: z.string().transform((pwd) => pwd.trim()),\r\n    isEdit: z.boolean(),\r\n  })\r\n  .superRefine(({ isEdit, password, confirmPassword }, ctx) => {\r\n    if (!isEdit || (isEdit && password !== '')) {\r\n      if (password === '') {\r\n        ctx.addIssue({\r\n          code: z.ZodIssueCode.custom,\r\n          message: 'Password is required.',\r\n          path: ['password'],\r\n        })\r\n      }\r\n\r\n      if (password.length < 8) {\r\n        ctx.addIssue({\r\n          code: z.ZodIssueCode.custom,\r\n          message: 'Password must be at least 8 characters long.',\r\n          path: ['password'],\r\n        })\r\n      }\r\n\r\n      if (!password.match(/[a-z]/)) {\r\n        ctx.addIssue({\r\n          code: z.ZodIssueCode.custom,\r\n          message: 'Password must contain at least one lowercase letter.',\r\n          path: ['password'],\r\n        })\r\n      }\r\n\r\n      if (!password.match(/\\d/)) {\r\n        ctx.addIssue({\r\n          code: z.ZodIssueCode.custom,\r\n          message: 'Password must contain at least one number.',\r\n          path: ['password'],\r\n        })\r\n      }\r\n\r\n      if (password !== confirmPassword) {\r\n        ctx.addIssue({\r\n          code: z.ZodIssueCode.custom,\r\n          message: \"Passwords don't match.\",\r\n          path: ['confirmPassword'],\r\n        })\r\n      }\r\n    }\r\n  })\r\ntype UserForm = z.infer<typeof formSchema>\r\n\r\ninterface Props {\r\n  currentRow?: User\r\n  open: boolean\r\n  onOpenChange: (open: boolean) => void\r\n}\r\n\r\nexport function UsersActionDialog({ currentRow, open, onOpenChange }: Props) {\r\n  const isEdit = !!currentRow\r\n  const form = useForm<UserForm>({\r\n    resolver: zodResolver(formSchema),\r\n    defaultValues: isEdit\r\n      ? {\r\n          ...currentRow,\r\n          password: '',\r\n          confirmPassword: '',\r\n          isEdit,\r\n        }\r\n      : {\r\n          firstName: '',\r\n          lastName: '',\r\n          username: '',\r\n          email: '',\r\n          role: '',\r\n          phoneNumber: '',\r\n          password: '',\r\n          confirmPassword: '',\r\n          isEdit,\r\n        },\r\n  })\r\n\r\n  const onSubmit = (values: UserForm) => {\r\n    form.reset()\r\n    toast({\r\n      title: 'You submitted the following values:',\r\n      description: (\r\n        <pre className='mt-2 w-[340px] rounded-md bg-slate-950 p-4'>\r\n          <code className='text-white'>{JSON.stringify(values, null, 2)}</code>\r\n        </pre>\r\n      ),\r\n    })\r\n    onOpenChange(false)\r\n  }\r\n\r\n  const isPasswordTouched = !!form.formState.dirtyFields.password\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onOpenChange={(state) => {\r\n        form.reset()\r\n        onOpenChange(state)\r\n      }}\r\n    >\r\n      <DialogContent className='sm:max-w-lg'>\r\n        <DialogHeader className='text-left'>\r\n          <DialogTitle>{isEdit ? 'Edit User' : 'Add New User'}</DialogTitle>\r\n          <DialogDescription>\r\n            {isEdit ? 'Update the user here. ' : 'Create new user here. '}\r\n            Click save when you&apos;re done.\r\n          </DialogDescription>\r\n        </DialogHeader>\r\n        <ScrollArea className='-mr-4 h-[26.25rem] w-full py-1 pr-4'>\r\n          <Form {...form}>\r\n            <form\r\n              id='user-form'\r\n              onSubmit={form.handleSubmit(onSubmit)}\r\n              className='space-y-4 p-0.5'\r\n            >\r\n              <FormField\r\n                control={form.control}\r\n                name='firstName'\r\n                render={({ field }) => (\r\n                  <FormItem className='grid grid-cols-6 items-center gap-x-4 gap-y-1 space-y-0'>\r\n                    <FormLabel className='col-span-2 text-right'>\r\n                      First Name\r\n                    </FormLabel>\r\n                    <FormControl>\r\n                      <Input\r\n                        placeholder='John'\r\n                        className='col-span-4'\r\n                        autoComplete='off'\r\n                        {...field}\r\n                      />\r\n                    </FormControl>\r\n                    <FormMessage className='col-span-4 col-start-3' />\r\n                  </FormItem>\r\n                )}\r\n              />\r\n              <FormField\r\n                control={form.control}\r\n                name='lastName'\r\n                render={({ field }) => (\r\n                  <FormItem className='grid grid-cols-6 items-center gap-x-4 gap-y-1 space-y-0'>\r\n                    <FormLabel className='col-span-2 text-right'>\r\n                      Last Name\r\n                    </FormLabel>\r\n                    <FormControl>\r\n                      <Input\r\n                        placeholder='Doe'\r\n                        className='col-span-4'\r\n                        autoComplete='off'\r\n                        {...field}\r\n                      />\r\n                    </FormControl>\r\n                    <FormMessage className='col-span-4 col-start-3' />\r\n                  </FormItem>\r\n                )}\r\n              />\r\n              <FormField\r\n                control={form.control}\r\n                name='username'\r\n                render={({ field }) => (\r\n                  <FormItem className='grid grid-cols-6 items-center gap-x-4 gap-y-1 space-y-0'>\r\n                    <FormLabel className='col-span-2 text-right'>\r\n                      Username\r\n                    </FormLabel>\r\n                    <FormControl>\r\n                      <Input\r\n                        placeholder='john_doe'\r\n                        className='col-span-4'\r\n                        {...field}\r\n                      />\r\n                    </FormControl>\r\n                    <FormMessage className='col-span-4 col-start-3' />\r\n                  </FormItem>\r\n                )}\r\n              />\r\n              <FormField\r\n                control={form.control}\r\n                name='email'\r\n                render={({ field }) => (\r\n                  <FormItem className='grid grid-cols-6 items-center gap-x-4 gap-y-1 space-y-0'>\r\n                    <FormLabel className='col-span-2 text-right'>\r\n                      Email\r\n                    </FormLabel>\r\n                    <FormControl>\r\n                      <Input\r\n                        placeholder='john.doe@gmail.com'\r\n                        className='col-span-4'\r\n                        {...field}\r\n                      />\r\n                    </FormControl>\r\n                    <FormMessage className='col-span-4 col-start-3' />\r\n                  </FormItem>\r\n                )}\r\n              />\r\n              <FormField\r\n                control={form.control}\r\n                name='phoneNumber'\r\n                render={({ field }) => (\r\n                  <FormItem className='grid grid-cols-6 items-center gap-x-4 gap-y-1 space-y-0'>\r\n                    <FormLabel className='col-span-2 text-right'>\r\n                      Phone Number\r\n                    </FormLabel>\r\n                    <FormControl>\r\n                      <Input\r\n                        placeholder='+123456789'\r\n                        className='col-span-4'\r\n                        {...field}\r\n                      />\r\n                    </FormControl>\r\n                    <FormMessage className='col-span-4 col-start-3' />\r\n                  </FormItem>\r\n                )}\r\n              />\r\n              <FormField\r\n                control={form.control}\r\n                name='confirmPassword'\r\n                render={({ field }) => (\r\n                  <FormItem className='grid grid-cols-6 items-center gap-x-4 gap-y-1 space-y-0'>\r\n                    <FormLabel className='col-span-2 text-right'>\r\n                      Confirm Password\r\n                    </FormLabel>\r\n                    <FormControl>\r\n                      <PasswordInput\r\n                        disabled={!isPasswordTouched}\r\n                        placeholder='e.g., S3cur3P@ssw0rd'\r\n                        className='col-span-4'\r\n                        {...field}\r\n                      />\r\n                    </FormControl>\r\n                    <FormMessage className='col-span-4 col-start-3' />\r\n                  </FormItem>\r\n                )}\r\n              />\r\n            </form>\r\n          </Form>\r\n        </ScrollArea>\r\n        <DialogFooter>\r\n          <Button type='submit' form='user-form'>\r\n            Save changes\r\n          </Button>\r\n        </DialogFooter>\r\n      </DialogContent>\r\n    </Dialog>\r\n  )\r\n}\r\n"
        }
    ]
}