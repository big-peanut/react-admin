{
    "sourceFile": "src/features/users/components/users-columns.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 11,
            "patches": [
                {
                    "date": 1740972243840,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740973110060,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,26 +38,10 @@\n     ),\r\n     enableSorting: false,\r\n     enableHiding: false,\r\n   },\r\n+\r\n   {\r\n-    accessorKey: 'username',\r\n-    header: ({ column }) => (\r\n-      <DataTableColumnHeader column={column} title='Username' />\r\n-    ),\r\n-    cell: ({ row }) => (\r\n-      <LongText className='max-w-36'>{row.getValue('username')}</LongText>\r\n-    ),\r\n-    meta: {\r\n-      className: cn(\r\n-        'drop-shadow-[0_1px_2px_rgb(0_0_0_/_0.1)] dark:drop-shadow-[0_1px_2px_rgb(255_255_255_/_0.1)] lg:drop-shadow-none',\r\n-        'bg-background transition-colors duration-200 group-hover/row:bg-muted group-data-[state=selected]/row:bg-muted',\r\n-        'sticky left-6 md:table-cell'\r\n-      ),\r\n-    },\r\n-    enableHiding: false,\r\n-  },\r\n-  {\r\n     id: 'fullName',\r\n     header: ({ column }) => (\r\n       <DataTableColumnHeader column={column} title='Name' />\r\n     ),\r\n@@ -67,32 +51,32 @@\n     },\r\n     meta: { className: 'w-36' },\r\n   },\r\n   {\r\n-    accessorKey: 'email',\r\n+    accessorKey: 'emailAddress',\r\n     header: ({ column }) => (\r\n-      <DataTableColumnHeader column={column} title='Email' />\r\n+      <DataTableColumnHeader column={column} title='Email Address' />\r\n     ),\r\n     cell: ({ row }) => (\r\n-      <div className='w-fit text-nowrap'>{row.getValue('email')}</div>\r\n+      <div className='w-fit text-nowrap'>{row.getValue('emailAddress')}</div>\r\n     ),\r\n   },\r\n   {\r\n-    accessorKey: 'phoneNumber',\r\n+    accessorKey: 'mobileNumber',\r\n     header: ({ column }) => (\r\n-      <DataTableColumnHeader column={column} title='Phone Number' />\r\n+      <DataTableColumnHeader column={column} title='Mobile Number' />\r\n     ),\r\n-    cell: ({ row }) => <div>{row.getValue('phoneNumber')}</div>,\r\n+    cell: ({ row }) => <div>{row.getValue('mobileNumber')}</div>,\r\n     enableSorting: false,\r\n   },\r\n   {\r\n-    accessorKey: 'status',\r\n+    accessorKey: 'enabled',\r\n     header: ({ column }) => (\r\n-      <DataTableColumnHeader column={column} title='Status' />\r\n+      <DataTableColumnHeader column={column} title='Enabled' />\r\n     ),\r\n     cell: ({ row }) => {\r\n-      const { status } = row.original\r\n-      const badgeColor = callTypes.get(status)\r\n+      const { enabled } = row.original\r\n+      const badgeColor = callTypes.get(enabled)\r\n       return (\r\n         <div className='flex space-x-2'>\r\n           <Badge variant='outline' className={cn('capitalize', badgeColor)}>\r\n             {row.getValue('status')}\r\n"
                },
                {
                    "date": 1740973117688,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,9 +78,9 @@\n       const badgeColor = callTypes.get(enabled)\r\n       return (\r\n         <div className='flex space-x-2'>\r\n           <Badge variant='outline' className={cn('capitalize', badgeColor)}>\r\n-            {row.getValue('status')}\r\n+            {row.getValue('enabled')}\r\n           </Badge>\r\n         </div>\r\n       )\r\n     },\r\n"
                },
                {
                    "date": 1740973555395,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,8 @@\n import { cn } from '@/lib/utils'\r\n import { Badge } from '@/components/ui/badge'\r\n import { Checkbox } from '@/components/ui/checkbox'\r\n import LongText from '@/components/long-text'\r\n-import { callTypes } from '../data/data'\r\n import { User } from '../data/schema'\r\n import { DataTableColumnHeader } from './data-table-column-header'\r\n import { DataTableRowActions } from './data-table-row-actions'\r\n \r\n@@ -38,9 +37,8 @@\n     ),\r\n     enableSorting: false,\r\n     enableHiding: false,\r\n   },\r\n-\r\n   {\r\n     id: 'fullName',\r\n     header: ({ column }) => (\r\n       <DataTableColumnHeader column={column} title='Name' />\r\n@@ -74,13 +72,12 @@\n       <DataTableColumnHeader column={column} title='Enabled' />\r\n     ),\r\n     cell: ({ row }) => {\r\n       const { enabled } = row.original\r\n-      const badgeColor = callTypes.get(enabled)\r\n       return (\r\n         <div className='flex space-x-2'>\r\n-          <Badge variant='outline' className={cn('capitalize', badgeColor)}>\r\n-            {row.getValue('enabled')}\r\n+          <Badge variant='outline' className={cn('capitalize', enabled ? 'bg-green-500' : 'bg-red-500')}>\r\n+            {enabled ? 'Enabled' : 'Disabled'}\r\n           </Badge>\r\n         </div>\r\n       )\r\n     },\r\n@@ -89,10 +86,9 @@\n     },\r\n     enableHiding: false,\r\n     enableSorting: false,\r\n   },\r\n-\r\n   {\r\n     id: 'actions',\r\n     cell: DataTableRowActions,\r\n   },\r\n-]\r\n+]\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740973638265,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,17 +54,19 @@\n     header: ({ column }) => (\r\n       <DataTableColumnHeader column={column} title='Email Address' />\r\n     ),\r\n     cell: ({ row }) => (\r\n-      <div className='w-fit text-nowrap'>{row.getValue('emailAddress')}</div>\r\n+      <div className='w-48 text-nowrap'>{row.getValue('emailAddress')}</div>\r\n     ),\r\n+    meta: { className: 'w-48' },\r\n   },\r\n   {\r\n     accessorKey: 'mobileNumber',\r\n     header: ({ column }) => (\r\n       <DataTableColumnHeader column={column} title='Mobile Number' />\r\n     ),\r\n-    cell: ({ row }) => <div>{row.getValue('mobileNumber')}</div>,\r\n+    cell: ({ row }) => <div className='w-32'>{row.getValue('mobileNumber')}</div>,\r\n+    meta: { className: 'w-32' },\r\n     enableSorting: false,\r\n   },\r\n   {\r\n     accessorKey: 'enabled',\r\n@@ -96,5 +98,5 @@\n   {\r\n     id: 'actions',\r\n     cell: DataTableRowActions,\r\n   },\r\n-]\r\n+]\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740973688526,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,9 @@\n     ),\r\n     cell: ({ row }) => (\r\n       <div className='w-48 text-nowrap'>{row.getValue('emailAddress')}</div>\r\n     ),\r\n-    meta: { className: 'w-48' },\r\n+    meta: { className: 'w-64' },\r\n   },\r\n   {\r\n     accessorKey: 'mobileNumber',\r\n     header: ({ column }) => (\r\n"
                },
                {
                    "date": 1740973694852,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,9 @@\n     ),\r\n     cell: ({ row }) => (\r\n       <div className='w-48 text-nowrap'>{row.getValue('emailAddress')}</div>\r\n     ),\r\n-    meta: { className: 'w-64' },\r\n+    meta: { className: 'w-80' },\r\n   },\r\n   {\r\n     accessorKey: 'mobileNumber',\r\n     header: ({ column }) => (\r\n"
                },
                {
                    "date": 1740973707883,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n     cell: ({ row }) => {\r\n       const { fullName } = row.original\r\n       return <LongText className='max-w-36'>{fullName}</LongText>\r\n     },\r\n-    meta: { className: 'w-36' },\r\n+    meta: { className: 'w-54' },\r\n   },\r\n   {\r\n     accessorKey: 'emailAddress',\r\n     header: ({ column }) => (\r\n"
                },
                {
                    "date": 1740973714292,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n     cell: ({ row }) => {\r\n       const { fullName } = row.original\r\n       return <LongText className='max-w-36'>{fullName}</LongText>\r\n     },\r\n-    meta: { className: 'w-54' },\r\n+    meta: { className: 'w-48' },\r\n   },\r\n   {\r\n     accessorKey: 'emailAddress',\r\n     header: ({ column }) => (\r\n"
                },
                {
                    "date": 1740973760490,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,8 +49,19 @@\n     },\r\n     meta: { className: 'w-48' },\r\n   },\r\n   {\r\n+    id: 'alias',\r\n+    header: ({ column }) => (\r\n+      <DataTableColumnHeader column={column} title='Alias' />\r\n+    ),\r\n+    cell: ({ row }) => {\r\n+      const { alias } = row.original\r\n+      return <LongText className='max-w-36'>{alias}</LongText>\r\n+    },\r\n+    meta: { className: 'w-48' },\r\n+  },\r\n+  {\r\n     accessorKey: 'emailAddress',\r\n     header: ({ column }) => (\r\n       <DataTableColumnHeader column={column} title='Email Address' />\r\n     ),\r\n"
                },
                {
                    "date": 1740973803375,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,9 +77,9 @@\n     ),\r\n     cell: ({ row }) => (\r\n       <div className='w-32'>{row.getValue('mobileNumber')}</div>\r\n     ),\r\n-    meta: { className: 'w-32' },\r\n+    meta: { className: 'w-36' },\r\n     enableSorting: false,\r\n   },\r\n   {\r\n     accessorKey: 'enabled',\r\n"
                },
                {
                    "date": 1740973817135,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,9 @@\n     cell: ({ row }) => {\r\n       const { alias } = row.original\r\n       return <LongText className='max-w-36'>{alias}</LongText>\r\n     },\r\n-    meta: { className: 'w-48' },\r\n+    meta: { className: 'w-38' },\r\n   },\r\n   {\r\n     accessorKey: 'emailAddress',\r\n     header: ({ column }) => (\r\n"
                }
            ],
            "date": 1740972243840,
            "name": "Commit-0",
            "content": "import { ColumnDef } from '@tanstack/react-table'\r\nimport { cn } from '@/lib/utils'\r\nimport { Badge } from '@/components/ui/badge'\r\nimport { Checkbox } from '@/components/ui/checkbox'\r\nimport LongText from '@/components/long-text'\r\nimport { callTypes } from '../data/data'\r\nimport { User } from '../data/schema'\r\nimport { DataTableColumnHeader } from './data-table-column-header'\r\nimport { DataTableRowActions } from './data-table-row-actions'\r\n\r\nexport const columns: ColumnDef<User>[] = [\r\n  {\r\n    id: 'select',\r\n    header: ({ table }) => (\r\n      <Checkbox\r\n        checked={\r\n          table.getIsAllPageRowsSelected() ||\r\n          (table.getIsSomePageRowsSelected() && 'indeterminate')\r\n        }\r\n        onCheckedChange={(value) => table.toggleAllPageRowsSelected(!!value)}\r\n        aria-label='Select all'\r\n        className='translate-y-[2px]'\r\n      />\r\n    ),\r\n    meta: {\r\n      className: cn(\r\n        'sticky md:table-cell left-0 z-10 rounded-tl',\r\n        'bg-background transition-colors duration-200 group-hover/row:bg-muted group-data-[state=selected]/row:bg-muted'\r\n      ),\r\n    },\r\n    cell: ({ row }) => (\r\n      <Checkbox\r\n        checked={row.getIsSelected()}\r\n        onCheckedChange={(value) => row.toggleSelected(!!value)}\r\n        aria-label='Select row'\r\n        className='translate-y-[2px]'\r\n      />\r\n    ),\r\n    enableSorting: false,\r\n    enableHiding: false,\r\n  },\r\n  {\r\n    accessorKey: 'username',\r\n    header: ({ column }) => (\r\n      <DataTableColumnHeader column={column} title='Username' />\r\n    ),\r\n    cell: ({ row }) => (\r\n      <LongText className='max-w-36'>{row.getValue('username')}</LongText>\r\n    ),\r\n    meta: {\r\n      className: cn(\r\n        'drop-shadow-[0_1px_2px_rgb(0_0_0_/_0.1)] dark:drop-shadow-[0_1px_2px_rgb(255_255_255_/_0.1)] lg:drop-shadow-none',\r\n        'bg-background transition-colors duration-200 group-hover/row:bg-muted group-data-[state=selected]/row:bg-muted',\r\n        'sticky left-6 md:table-cell'\r\n      ),\r\n    },\r\n    enableHiding: false,\r\n  },\r\n  {\r\n    id: 'fullName',\r\n    header: ({ column }) => (\r\n      <DataTableColumnHeader column={column} title='Name' />\r\n    ),\r\n    cell: ({ row }) => {\r\n      const { fullName } = row.original\r\n      return <LongText className='max-w-36'>{fullName}</LongText>\r\n    },\r\n    meta: { className: 'w-36' },\r\n  },\r\n  {\r\n    accessorKey: 'email',\r\n    header: ({ column }) => (\r\n      <DataTableColumnHeader column={column} title='Email' />\r\n    ),\r\n    cell: ({ row }) => (\r\n      <div className='w-fit text-nowrap'>{row.getValue('email')}</div>\r\n    ),\r\n  },\r\n  {\r\n    accessorKey: 'phoneNumber',\r\n    header: ({ column }) => (\r\n      <DataTableColumnHeader column={column} title='Phone Number' />\r\n    ),\r\n    cell: ({ row }) => <div>{row.getValue('phoneNumber')}</div>,\r\n    enableSorting: false,\r\n  },\r\n  {\r\n    accessorKey: 'status',\r\n    header: ({ column }) => (\r\n      <DataTableColumnHeader column={column} title='Status' />\r\n    ),\r\n    cell: ({ row }) => {\r\n      const { status } = row.original\r\n      const badgeColor = callTypes.get(status)\r\n      return (\r\n        <div className='flex space-x-2'>\r\n          <Badge variant='outline' className={cn('capitalize', badgeColor)}>\r\n            {row.getValue('status')}\r\n          </Badge>\r\n        </div>\r\n      )\r\n    },\r\n    filterFn: (row, id, value) => {\r\n      return value.includes(row.getValue(id))\r\n    },\r\n    enableHiding: false,\r\n    enableSorting: false,\r\n  },\r\n\r\n  {\r\n    id: 'actions',\r\n    cell: DataTableRowActions,\r\n  },\r\n]\r\n"
        }
    ]
}