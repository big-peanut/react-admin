{
    "sourceFile": "src/features/users/components/users-invite-dialog.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1740972265636,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740972271291,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,8 @@\n   FormMessage,\r\n } from '@/components/ui/form'\r\n import { Input } from '@/components/ui/input'\r\n import { Textarea } from '@/components/ui/textarea'\r\n-import { SelectDropdown } from '@/components/select-dropdown'\r\n \r\n const formSchema = z.object({\r\n   email: z\r\n     .string()\r\n"
                },
                {
                    "date": 1740976260955,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,19 +44,12 @@\n     resolver: zodResolver(formSchema),\r\n     defaultValues: { email: '', role: '', desc: '' },\r\n   })\r\n \r\n-  const onSubmit = (values: UserInviteForm) => {\r\n-    form.reset()\r\n+  const onSubmit = () => {\r\n     toast({\r\n-      title: 'You submitted the following values:',\r\n-      description: (\r\n-        <pre className='mt-2 w-[340px] rounded-md bg-slate-950 p-4'>\r\n-          <code className='text-white'>{JSON.stringify(values, null, 2)}</code>\r\n-        </pre>\r\n-      ),\r\n+      title: 'Your Changes Have Been Saved',\r\n     })\r\n-    onOpenChange(false)\r\n   }\r\n \r\n   return (\r\n     <Dialog\r\n"
                },
                {
                    "date": 1740976288824,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,8 +22,10 @@\n   FormMessage,\r\n } from '@/components/ui/form'\r\n import { Input } from '@/components/ui/input'\r\n import { Textarea } from '@/components/ui/textarea'\r\n+import { SelectDropdown } from '@/components/select-dropdown'\r\n+import { userTypes } from '../data/data'\r\n \r\n const formSchema = z.object({\r\n   email: z\r\n     .string()\r\n@@ -44,12 +46,19 @@\n     resolver: zodResolver(formSchema),\r\n     defaultValues: { email: '', role: '', desc: '' },\r\n   })\r\n \r\n-  const onSubmit = () => {\r\n+  const onSubmit = (values: UserInviteForm) => {\r\n+    form.reset()\r\n     toast({\r\n-      title: 'Your Changes Have Been Saved',\r\n+      title: 'You submitted the following values:',\r\n+      description: (\r\n+        <pre className='mt-2 w-[340px] rounded-md bg-slate-950 p-4'>\r\n+          <code className='text-white'>{JSON.stringify(values, null, 2)}</code>\r\n+        </pre>\r\n+      ),\r\n     })\r\n+    onOpenChange(false)\r\n   }\r\n \r\n   return (\r\n     <Dialog\r\n@@ -93,8 +102,27 @@\n               )}\r\n             />\r\n             <FormField\r\n               control={form.control}\r\n+              name='role'\r\n+              render={({ field }) => (\r\n+                <FormItem className='space-y-1'>\r\n+                  <FormLabel>Role</FormLabel>\r\n+                  <SelectDropdown\r\n+                    defaultValue={field.value}\r\n+                    onValueChange={field.onChange}\r\n+                    placeholder='Select a role'\r\n+                    items={userTypes.map(({ label, value }) => ({\r\n+                      label,\r\n+                      value,\r\n+                    }))}\r\n+                  />\r\n+                  <FormMessage />\r\n+                </FormItem>\r\n+              )}\r\n+            />\r\n+            <FormField\r\n+              control={form.control}\r\n               name='desc'\r\n               render={({ field }) => (\r\n                 <FormItem className=''>\r\n                   <FormLabel>Description (optional)</FormLabel>\r\n"
                },
                {
                    "date": 1740976336406,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,8 @@\n } from '@/components/ui/form'\r\n import { Input } from '@/components/ui/input'\r\n import { Textarea } from '@/components/ui/textarea'\r\n import { SelectDropdown } from '@/components/select-dropdown'\r\n-import { userTypes } from '../data/data'\r\n \r\n const formSchema = z.object({\r\n   email: z\r\n     .string()\r\n@@ -100,29 +99,11 @@\n                   <FormMessage />\r\n                 </FormItem>\r\n               )}\r\n             />\r\n+\r\n             <FormField\r\n               control={form.control}\r\n-              name='role'\r\n-              render={({ field }) => (\r\n-                <FormItem className='space-y-1'>\r\n-                  <FormLabel>Role</FormLabel>\r\n-                  <SelectDropdown\r\n-                    defaultValue={field.value}\r\n-                    onValueChange={field.onChange}\r\n-                    placeholder='Select a role'\r\n-                    items={userTypes.map(({ label, value }) => ({\r\n-                      label,\r\n-                      value,\r\n-                    }))}\r\n-                  />\r\n-                  <FormMessage />\r\n-                </FormItem>\r\n-              )}\r\n-            />\r\n-            <FormField\r\n-              control={form.control}\r\n               name='desc'\r\n               render={({ field }) => (\r\n                 <FormItem className=''>\r\n                   <FormLabel>Description (optional)</FormLabel>\r\n"
                },
                {
                    "date": 1740976342520,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,8 @@\n   FormMessage,\r\n } from '@/components/ui/form'\r\n import { Input } from '@/components/ui/input'\r\n import { Textarea } from '@/components/ui/textarea'\r\n-import { SelectDropdown } from '@/components/select-dropdown'\r\n \r\n const formSchema = z.object({\r\n   email: z\r\n     .string()\r\n"
                }
            ],
            "date": 1740972265636,
            "name": "Commit-0",
            "content": "import { z } from 'zod'\r\nimport { useForm } from 'react-hook-form'\r\nimport { zodResolver } from '@hookform/resolvers/zod'\r\nimport { IconMailPlus, IconSend } from '@tabler/icons-react'\r\nimport { toast } from '@/hooks/use-toast'\r\nimport { Button } from '@/components/ui/button'\r\nimport {\r\n  Dialog,\r\n  DialogClose,\r\n  DialogContent,\r\n  DialogDescription,\r\n  DialogFooter,\r\n  DialogHeader,\r\n  DialogTitle,\r\n} from '@/components/ui/dialog'\r\nimport {\r\n  Form,\r\n  FormControl,\r\n  FormField,\r\n  FormItem,\r\n  FormLabel,\r\n  FormMessage,\r\n} from '@/components/ui/form'\r\nimport { Input } from '@/components/ui/input'\r\nimport { Textarea } from '@/components/ui/textarea'\r\nimport { SelectDropdown } from '@/components/select-dropdown'\r\n\r\nconst formSchema = z.object({\r\n  email: z\r\n    .string()\r\n    .min(1, { message: 'Email is required.' })\r\n    .email({ message: 'Email is invalid.' }),\r\n  role: z.string().min(1, { message: 'Role is required.' }),\r\n  desc: z.string().optional(),\r\n})\r\ntype UserInviteForm = z.infer<typeof formSchema>\r\n\r\ninterface Props {\r\n  open: boolean\r\n  onOpenChange: (open: boolean) => void\r\n}\r\n\r\nexport function UsersInviteDialog({ open, onOpenChange }: Props) {\r\n  const form = useForm<UserInviteForm>({\r\n    resolver: zodResolver(formSchema),\r\n    defaultValues: { email: '', role: '', desc: '' },\r\n  })\r\n\r\n  const onSubmit = (values: UserInviteForm) => {\r\n    form.reset()\r\n    toast({\r\n      title: 'You submitted the following values:',\r\n      description: (\r\n        <pre className='mt-2 w-[340px] rounded-md bg-slate-950 p-4'>\r\n          <code className='text-white'>{JSON.stringify(values, null, 2)}</code>\r\n        </pre>\r\n      ),\r\n    })\r\n    onOpenChange(false)\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onOpenChange={(state) => {\r\n        form.reset()\r\n        onOpenChange(state)\r\n      }}\r\n    >\r\n      <DialogContent className='sm:max-w-md'>\r\n        <DialogHeader className='text-left'>\r\n          <DialogTitle className='flex items-center gap-2'>\r\n            <IconMailPlus /> Invite User\r\n          </DialogTitle>\r\n          <DialogDescription>\r\n            Invite new user to join your team by sending them an email\r\n            invitation. Assign a role to define their access level.\r\n          </DialogDescription>\r\n        </DialogHeader>\r\n        <Form {...form}>\r\n          <form\r\n            id='user-invite-form'\r\n            onSubmit={form.handleSubmit(onSubmit)}\r\n            className='space-y-4'\r\n          >\r\n            <FormField\r\n              control={form.control}\r\n              name='email'\r\n              render={({ field }) => (\r\n                <FormItem>\r\n                  <FormLabel>Email</FormLabel>\r\n                  <FormControl>\r\n                    <Input\r\n                      type='email'\r\n                      placeholder='eg: john.doe@gmail.com'\r\n                      {...field}\r\n                    />\r\n                  </FormControl>\r\n                  <FormMessage />\r\n                </FormItem>\r\n              )}\r\n            />\r\n            <FormField\r\n              control={form.control}\r\n              name='desc'\r\n              render={({ field }) => (\r\n                <FormItem className=''>\r\n                  <FormLabel>Description (optional)</FormLabel>\r\n                  <FormControl>\r\n                    <Textarea\r\n                      className='resize-none'\r\n                      placeholder='Add a personal note to your invitation (optional)'\r\n                      {...field}\r\n                    />\r\n                  </FormControl>\r\n                  <FormMessage />\r\n                </FormItem>\r\n              )}\r\n            />\r\n          </form>\r\n        </Form>\r\n        <DialogFooter className='gap-y-2'>\r\n          <DialogClose asChild>\r\n            <Button variant='outline'>Cancel</Button>\r\n          </DialogClose>\r\n          <Button type='submit' form='user-invite-form'>\r\n            Invite <IconSend />\r\n          </Button>\r\n        </DialogFooter>\r\n      </DialogContent>\r\n    </Dialog>\r\n  )\r\n}\r\n"
        }
    ]
}